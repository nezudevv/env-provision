#!/usr/bin/env bash

script_dir=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
root_dir="$script_dir/.."
dry="0"

while [[ $# > 0 ]]; do
	if [[ $1 == "--dry" ]]; then
		dry="1"
	fi
	shift
done

log() {
	if [[ $dry == "1" ]]; then
		echo "[DRY_RUN]: $@"
	else
		echo "➜ $@"
	fi
}

execute() {
	if [[ $dry == "1" ]]; then
		log "would execute: $@"
		return
	fi
	"$@"
}

success() {
	log "✓ $@"
}

log "--------- Symlinking Configuration Files ---------"

# Function to safely symlink a file/directory
safe_symlink() {
	local source="$1"
	local target="$2"
	local name=$(basename "$source")

	# Check if target exists and is not a symlink
	if [ -e "$target" ] && [ ! -L "$target" ]; then
		log "Backing up existing $target to ${target}.backup"
		execute mv "$target" "${target}.backup"
	fi

	# Remove existing symlink if it exists
	if [ -L "$target" ]; then
		execute rm "$target"
	fi

	# Create symlink
	execute ln -s "$source" "$target"
	success "Linked $name"
}

# Symlink .zshrc
log "Symlinking shell configuration..."
safe_symlink "$root_dir/.zshrc" "$HOME/.zshrc"

# Symlink .config directories
log "Symlinking .config directories..."
execute mkdir -p "$HOME/.config"

config_dirs=(
	"git"
	"tmux"
	"nvimmmm"
	"ghostty"
	"zed"
)

for dir in "${config_dirs[@]}"; do
	if [ -d "$root_dir/.config/$dir" ]; then
		safe_symlink "$root_dir/.config/$dir" "$HOME/.config/$dir"
	fi
done

# Symlink .local directories
log "Symlinking .local directories..."
execute mkdir -p "$HOME/.local"

local_dirs=(
	"scripts"
	"vaults"
)

for dir in "${local_dirs[@]}"; do
	if [ -d "$root_dir/.local/$dir" ]; then
		safe_symlink "$root_dir/.local/$dir" "$HOME/.local/$dir"
	fi
done

log ""
success "Configuration files symlinked!"
log "Changes to files in $(basename $root_dir) will now automatically apply"
